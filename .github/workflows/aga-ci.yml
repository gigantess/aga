name: AGA CI (build, lint, docker push)

on:
  push:
    branches: [ main ]
    paths:
      - 'aga/**'
      - '.github/workflows/aga-ci.yml'
  pull_request:
    paths:
      - 'aga/**'

concurrency:
  group: aga-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint_and_build:
    name: Lint & Build (Node)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ manifest, nl-dsl, planner ]
    defaults:
      run:
        working-directory: aga/services/${{ matrix.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: aga/services/${{ matrix.service }}/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint (if available)
        run: |
          if npm run | grep -qE '^ *lint'; then
            npm run lint
          else
            echo "No lint script. Skipping."
          fi

      - name: Build (if available)
        run: |
          if npm run | grep -qE '^ *build'; then
            npm run build
          else
            # Typescript가 있다면 tsconfig로 빌드 시도, 없어도 무시
            npx tsc -p tsconfig.json || true
          fi

      - name: Test (if available)
        run: |
          if npm run | grep -qE '^ *test'; then
            npm test --ignore-scripts
          else
            echo "No test script. Skipping."
          fi

  docker_build_and_push:
    name: Docker Build & Push (GHCR)
    needs: lint_and_build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # GHCR 푸시에 필요
    strategy:
      matrix:
        service: [ manifest, nl-dsl, planner ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service }}
          tags: |
            type=raw,value=sha-${{ github.sha }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}

      - name: Build and (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: aga/services/${{ matrix.service }}
          file: aga/services/${{ matrix.service }}/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
